@using Shop.Shared
@inject IProductService ProductService
@implements IDisposable

<h3>ProductList</h3>
@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else{
<MudGrid>
    @foreach (var product in ProductService.Products)
    {
        <MudItem xs="12">
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                
                <MudLink Href=@($"/product/{product.Id}")>
                    <MudImage Src=@product.ImageUrl Width="200" Height="300" Class="rounded-lg ma-4" />
                </MudLink>
                <MudStack>
                    <MudText Typo="Typo.h3" Align="Align.Start">@product.Title</MudText>
                    <MudText Typo="Typo.body1">@product.Description</MudText>
                    <MudText Color="Color.Info">Price : @product.Price</MudText>
                    </MudStack>

            </MudPaper>
        </MudItem>
    }
</MudGrid>
}
@code {
   
    protected override async Task OnInitializedAsync()
    {
        ProductService.ProductsChanged += StateHasChanged;

    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

}

