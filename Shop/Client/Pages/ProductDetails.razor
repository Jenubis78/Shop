@page "/product/{id:int}"
@inject IProductService ProductService

@if (product == null && message == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else if (message != null)
{
    <MudText Typo="Typo.h1">Le produit n'existe pas !</MudText>
}
else
{
    <MudGrid>
            <MudItem xs="12">
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                <MudStack AlignItems="AlignItems.Center">
                    
                        <MudImage Src=@product.ImageUrl Width="400" Height="600" Class="rounded-lg ma-4" />
                    
                    
                    <MudText Typo="Typo.h3">@product.Title</MudText>
                    <MudText Typo="Typo.body1">@product.Description</MudText>
                    <MudText Color="Color.Info">Price : @product.Price</MudText>
                </MudStack>

                </MudPaper>
            </MudItem>
    </MudGrid>
}

@code {
    private Product? product = null;
    private string? message;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        
       var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
            
        }
        else
        {
            product = result.Data;
        }
    }
}
